#BlueJ class context
comment0.target=LogEntry
comment0.text=\r\n\ Store\ the\ data\ from\ a\ single\ line\ of\ a\r\n\ web-server\ log\ file.\r\n\ Individual\ fields\ are\ made\ available\ via\r\n\ accessors\ such\ as\ getHour()\ and\ getMinute().\r\n\ \r\n\ @author\ David\ J.\ Barnes\ and\ Michael\ K\u00F6lling.\r\n\ @version\ 7.0\r\n
comment1.params=dataValues
comment1.target=LogEntry(int[])
comment1.text=\r\n\ Receive\ the\ data\ values\ of\ a\ single\ log\ entry.\r\n\ @param\ dataValues\ These\ should\ be\ in\ the\ order\:\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ year\ month\ day\ hour\ minute\ etc.\r\n
comment10.params=
comment10.target=java.util.Calendar\ getWhen()
comment10.text=\r\n\ Return\ the\ Calendar\ object\ representing\ this\ event.\r\n\ @return\ The\ Calendar\ for\ this\ event.\r\n
comment11.params=
comment11.target=void\ setWhen()
comment11.text=\r\n\ Create\ an\ equivalent\ Calendar\ object\ from\ the\ data\ values.\r\n
comment2.params=year\ month\ day\ hour\ minute
comment2.target=LogEntry(int,\ int,\ int,\ int,\ int)
comment2.text=\r\n\ Create\ a\ LogEntry\ from\ the\ individual\ components.\r\n\ @param\ year\ The\ year\r\n\ @param\ month\ The\ month\ (1-12)\r\n\ @param\ day\ The\ day\ (1-31)\r\n\ @param\ hour\ The\ hour\ (0-23)\r\n\ @param\ minute\ The\ minute\ (0-59)\r\n
comment3.params=
comment3.target=int\ getHour()
comment3.text=\r\n\ Return\ the\ hour.\r\n\ @return\ The\ hour\ field\ from\ the\ log\ line.\r\n
comment4.params=
comment4.target=int\ getMinute()
comment4.text=\r\n\ Return\ the\ minute.\r\n\ @return\ The\ minute\ field\ from\ the\ log\ line.\r\n
comment5.params=
comment5.target=int\ getDay()
comment5.text=\r\n\ Return\ the\ day.\r\n\ q19\r\n\ @return\ The\ day\ field\ from\ the\ log\ line.\r\n
comment6.params=
comment6.target=int\ getMonth()
comment6.text=\r\n\ Return\ the\ month.\r\n\ q19\r\n\ @return\ The\ month\ field\ from\ the\ log\ line.\r\n
comment7.params=
comment7.target=int\ getYear()
comment7.text=\r\n\ Return\ the\ year.\r\n\ q19\r\n\ @return\ The\ year\ field\ from\ the\ log\ line.\r\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\r\n\ Create\ a\ string\ representation\ of\ the\ data.\r\n\ This\ is\ not\ necessarily\ identical\ with\ the\r\n\ text\ of\ the\ original\ log\ line.\r\n\ @return\ A\ string\ representing\ the\ data\ of\ this\ entry.\r\n
comment9.params=otherEntry
comment9.target=int\ compareTo(LogEntry)
comment9.text=\r\n\ Compare\ the\ date/time\ combination\ of\ this\ log\ entry\r\n\ with\ another.\r\n\ @param\ otherEntry\ The\ other\ entry\ to\ compare\ against.\r\n\ @return\ A\ negative\ value\ if\ this\ entry\ comes\ before\ the\ other.\r\n\ \ \ \ \ \ \ \ \ A\ positive\ value\ if\ this\ entry\ comes\ after\ the\ other.\r\n\ \ \ \ \ \ \ \ \ Zero\ if\ the\ entries\ are\ the\ same.\r\n
numComments=12
